---

- include_vars: "{{ansible_os_family}}.yml"

- include: "Debian.install.yml"
  when: ansible_os_family == "Debian"

- include: "RedHat.install.yml"
  when: ansible_os_family == "RedHat"

- name: Copy git SSH key
  copy: src="{{item.ssh_keyfile}}" dest="/root/id_rsa_{{item.server_name}}" mode=0600
  when: item.ssh_keyfile
  with_items:
    - "{{lgf_app}}"

- name: Clone git repository
  git: dest={{ item.app_dir }} repo="{{item.repo}}" accept_hostkey=yes key_file="{% if item.ssh_keyfile %}/root/id_rsa_{{item.server_name}}{% endif %}"
  with_items:
    - "{{lgf_app}}"

- name: Copy app files
  copy: src="{{item.1.src}}" dest="{{item.0.app_dir}}/{{item.1.dest}}"
  when: item.1.src
  with_subelements:
    - "{{lgf_app}}"
    - extra_files

- name: Remove git SSH key
  file: path="/root/id_rsa_{{item.server_name}}" state="absent"
  when: item.ssh_keyfile
  with_items:
    - "{{lgf_app}}"

- name: Setup virtualenv (Python 2)
  command: virtualenv {{item.virtualenv_dir}} creates="{{item.virtualenv_dir}}"
  when: not item.python_3
  with_items:
    - "{{lgf_app}}"

- name: Setup virtualenv (Python 3)
  command: virtualenv -p python3 {{item.virtualenv_dir}} creates="{{item.virtualenv_dir}}"
  when: item.python_3
  with_items:
    - "{{lgf_app}}"

- name: pip install app requirements
  pip: requirements="{{item.app_dir}}/requirements.txt" virtualenv="{{item.virtualenv_dir}}"
  with_items:
    - "{{lgf_app}}"

- name: Install gunicorn
  pip: name=gunicorn virtualenv="{{item.virtualenv_dir}}"
  with_items:
    - "{{lgf_app}}"

- name: Change app owner
  file: path="{{item.app_dir}}" state=directory recurse=yes owner={{lgf_lighttpd_user}} group={{lgf_lighttpd_group}}
  with_items:
    - "{{lgf_app}}"

- name: Create vhost-dir
  file: dest="{{lgf_vhosts_dir}}" state=directory owner=root group=root mode=0644

- name: Copy vhost-configuration
  template: src="vhost.conf.j2" dest={{lgf_vhosts_dir}}/vhost.{{item.server_name}}.conf
  with_items:
    - "{{lgf_app}}"

- name: Activate vhosts
  lineinfile: dest="/etc/lighttpd/lighttpd.conf" line='include_shell "cat /etc/lighttpd/vhosts.d/*.conf"'

- include: "Debian.config.yml"
  when: ansible_os_family == "Debian"

- include: "RedHat.config.yml"
  when: ansible_os_family == "RedHat"

- name: Restart lighttpd and supervisor
  service: name="{{item}}" state=restarted  enabled=yes sleep=1
  with_items:
    - supervisor
    - lighttpd

- name: Start the app
  supervisorctl: name="{{item.server_name}}" state=started
  with_items:
    - "{{lgf_app}}"
